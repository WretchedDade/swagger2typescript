import Axios, { AxiosRequestConfig, AxiosResponse } from 'axios';

{{#imports}}
{{&.}}
{{/imports}}

export default async function {{name}}({{#hasParameters}}request: {{name}}{{parameterObjectSuffix}}, {{/hasParameters}} config: AxiosRequestConfig = {}){{#successResponse}}: Promise<AxiosResponse<{{&type}}>>{{/successResponse}} {
    const baseUrl = process.env.{{&baseUrl}} ?? '';

    {{#hasPathParameters}}let{{/hasPathParameters}}{{^hasPathParameters}}const{{/hasPathParameters}} path = '{{&fullPath}}';

    {{#hasParameters}}
        {{#parameters.path}}
        path = path.replace('{{#WrapInCurlyBrackets}}{{name}}{{/WrapInCurlyBrackets}}', request.{{name}}.toString());
        {{/parameters.path}}
    {{/hasParameters}}

    return Axios.request<{{#successResponse}}{{&type}}{{/successResponse}}>({
        ...config,

        method: "{{#UpperCase}}{{httpMethod}}{{/UpperCase}}",

        url: `${baseUrl}/${path}`,
        
        {{#hasParameters}}
        headers: {
        {{#parameters.headers}}
            {{name}}: request{{^required}}?{{/required}}.{{name}},
        {{/parameters.headers}}
        },

        params: {
        {{#parameters.query}}
            {{name}}: request{{^required}}?{{/required}}.{{name}},
        {{/parameters.query}}
        }
        {{/hasParameters}}
        
        {{#requestBody}},data: request.body{{/requestBody}}
    })
}